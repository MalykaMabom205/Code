#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_STUDENTS 6
#define MAX_NAME_LENGTH 50

// Define a structure to hold student information
struct Student {
    char firstName[MAX_NAME_LENGTH];
    char lastName[MAX_NAME_LENGTH];
    float score;
    char nationality[MAX_NAME_LENGTH];
};

// Function prototypes
void clearScreen();
void printAllStudents(struct Student students[], int count);
void searchByFirstName(struct Student students[], int count, const char *firstName);
void searchByLastName(struct Student students[], int count, const char *lastName);
void searchByGrad(struct Student students[], int count, float minScore);
void printAmericanStudents(struct Student students[], int count);
void saveBritishStudents(struct Student students[], int count);
void sortByFirstName(struct Student students[], int count);
void sortByLastName(struct Student students[], int count);
void sortByScore(struct Student students[], int count);

int main() {
    struct Student students[MAX_STUDENTS] = {
        {"Henry", "Ford", 3.9, "American"},
        {"Isaac", "Newton", 3.7, "British"},
        {"Albert", "Einstein", 4.1, "American"},
        {"Marie", "Curie", 4.2, "French"},
        {"Charles", "Darwin", 3.7, "British"},
        {"Nikola", "Tesla", 3.8, "American"}
    };

    int choice;
    int count = MAX_STUDENTS;

    do {
        // Display the menu
        printf("\nSelect a numeric choice from the given menu:\n");
        printf("0) Exit program.\n");
        printf("1) Clear Screen.\n");
        printf("2) Print all student records.\n");
        printf("3) Search records by first name.\n");
        printf("4) Search records by last name.\n");
        printf("5) Search records by Grad (>=).\n");
        printf("6) Print List, total, count, and average score for all American students.\n");
        printf("7) Save the records of British students in British.txt.\n");
        printf("8) Sort all records by First name.\n");
        printf("9) Sort all records by Last name.\n");
        printf("10) Sort all records by scores.\n");
        printf("Enter a choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 0:
                printf("Exiting program...\n");
                break;
            case 1:
                clearScreen();
                break;
            case 2:
                printAllStudents(students, count);
                break;
            case 3: {
                char searchFirstName[MAX_NAME_LENGTH];
                printf("Enter first name to search: ");
                scanf("%s", searchFirstName);
                searchByFirstName(students, count, searchFirstName);
                break;
            }
            case 4: {
                char searchLastName[MAX_NAME_LENGTH];
                printf("Enter last name to search: ");
                scanf("%s", searchLastName);
                searchByLastName(students, count, searchLastName);
                break;
            }
            case 5: {
                float minScore;
                printf("Enter minimum score to search: ");
                scanf("%f", &minScore);
                searchByGrad(students, count, minScore);
                break;
            }
            case 6:
                printAmericanStudents(students, count);
                break;
            case 7:
                saveBritishStudents(students, count);
                break;
            case 8:
                sortByFirstName(students, count);
                break;
            case 9:
                sortByLastName(students, count);
                break;
            case 10:
                sortByScore(students, count);
                break;
            default:
                printf("Invalid choice. Please enter a valid option.\n");
                break;
        }
    } while (choice != 0);

    return 0;
}

void clearScreen() {
    system("cls || clear");
}

void printAllStudents(struct Student students[], int count) {
    printf("Printing all student records:\n");
    for (int i = 0; i < count; i++) {
        printf("Name: %s %s, Score: %.1f, Nationality: %s\n",
               students[i].firstName, students[i].lastName, students[i].score, students[i].nationality);
    }
}

void searchByFirstName(struct Student students[], int count, const char *firstName) {
    printf("Searching for students with first name '%s':\n", firstName);
    int found = 0;
    for (int i = 0; i < count; i++) {
        if (strcmp(students[i].firstName, firstName) == 0) {
            printf("Name: %s %s, Score: %.1f, Nationality: %s\n",
                   students[i].firstName, students[i].lastName, students[i].score, students[i].nationality);
            found = 1;
        }
    }
    if (!found) {
        printf("No students found with first name '%s'.\n", firstName);
    }
}

void searchByLastName(struct Student students[], int count, const char *lastName) {
    printf("Searching for students with last name '%s':\n", lastName);
    int found = 0;
    for (int i = 0; i < count; i++) {
        if (strcmp(students[i].lastName, lastName) == 0) {
            printf("Name: %s %s, Score: %.1f, Nationality: %s\n",
                   students[i].firstName, students[i].lastName, students[i].score, students[i].nationality);
            found = 1;
        }
    }
    if (!found) {
        printf("No students found with last name '%s'.\n", lastName);
    }
}

void searchByGrad(struct Student students[], int count, float minScore) {
    printf("Searching for students with score >= %.1f:\n", minScore);
    int found = 0;
    for (int i = 0; i < count; i++) {
        if (students[i].score >= minScore) {
            printf("Name: %s %s, Score: %.1f, Nationality: %s\n",
                   students[i].firstName, students[i].lastName, students[i].score, students[i].nationality);
            found = 1;
        }
    }
    if (!found) {
        printf("No students found with score >= %.1f.\n", minScore);
    }
}

void printAmericanStudents(struct Student students[], int count) {
    printf("Printing American student records:\n");
    int americanCount = 0;
    float totalScore = 0.0;
    for (int i = 0; i < count; i++) {
        if (strcmp(students[i].nationality, "American") == 0) {
            printf("Name: %s %s, Score: %.1f\n",
                   students[i].firstName, students[i].lastName, students[i].score);
            totalScore += students[i].score;
           
